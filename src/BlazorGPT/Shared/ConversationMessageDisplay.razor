<div class="row m-1 p-0 message message-role-@Message.Role.ToLower()">

    <div class="col-1 col-md-1 m-0 mb-0 p-2 pe-0 @(Message.Role.ToLower() != "system" ? "bg-gradient" : "")">
        <ConversationRoleDisplay Role="@Message.Role" />

        <ul id="message-buttons" style="list-style-type: none" class="p-0 m-0 mt-1">
            @if (ShowRestart)
            {
                <li class="m-1 ms-0">
                    <RadzenButton Visible="ShowRestart" Class="message-action-restart" Click="RestartClicked" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.ExtraSmall" Icon="restart_alt" MouseEnter="@(args => ShowTooltip(args, "Restart from here"))" />

                </li>
            }
            @if (ShowShouldDisplayStateButton)
            {
                <li class="m-1 ms-0">
                    <RadzenButton Visible="ShowShouldDisplayStateButton" Class="message-action-state" Click="StateClicked" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.ExtraSmall" Icon="inventory" MouseEnter="@(args => ShowTooltip(args, "Show state"))" />

                </li>
            }

            @if (ShowEdit)
            {
                <li class="m-1 ms-0">
                    <RadzenButton Visible="true" Class="message-action-edit" Click="EditClicked" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.ExtraSmall" Icon="edit" MouseEnter="@(args => ShowTooltip(args, "Edit"))" />

                </li>

            }

            @if (Message.Role == ConversationRole.Assistant && ShowCopyButton)
            {
                <li class="m-1 ms-0">

                    <RadzenButton Visible="ShowCopyButton" class="message-action-copy" Click="CopyClicked" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.ExtraSmall" Icon="fork_left" Style="transform: rotate(180deg);" MouseEnter="@(args => ShowTooltip(args, "Branch from here"))" />
                </li>
            }
        </ul>
    </div>
    <div class="col-11 col-md-11 ps-2 pt-0 p-1 pb-0 mt-2 mb-0" id="@Message.Id">
        @if (Message.Role == ConversationRole.System)
        {
            <SystemPromptSelect InitialSystemPrompt="@InitialSystemPrompt" Disabled="!EditMode && MessagesCount > 1" />

            if (EditMode)
            {
                <button class="btn btn-sm btn-primary" @onclick="@(args => SaveMessage())">Save</button>
                <button class="btn btn-sm btn-secondary" @onclick="@(args => SaveMessage())">Cancel</button>
            }
        }
        else
        {
            <div class="m-0">

                @if (string.IsNullOrEmpty(Message.Content))
                {
                    <div class="spinner-border text-light" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                }
                @if (Message.Role == ConversationRole.Assistant)
                {
                    <div class="float-end align-bottom align-text-bottom">

                        @if (ShowBranches && Message.BranchedConversations.Any())
                        {
                            <div class="float-end">
                                <ul>

                                    @foreach (var branch in Message.BranchedConversations)
                                    {
                                        <li>
                                            <RadzenLink Path="@("/conversation/" + branch.Id)" Text="@branch.Summary" />
                                        </li>
                                    }
                                </ul>

                            </div>
                        }

                    </div>

                }



                @if (EditMode)
                {
                    <RadzenTextArea Style="font-size: 0.9rem; width: 95%;"
                                    @bind-Value="@Message.Content"
                                    Rows="@CalculatePromptHeight()" />

                    <button class="btn btn-sm btn-primary" @onclick="@(args => SaveMessage())">Save</button>
                    <button class="btn btn-sm btn-secondary" @onclick="@(args => CancelEdit())">Cancel</button>



                }
                else
                {
                    <MarkdownContent Content="@Message.Content" />
                }
            </div>
        }
    </div>
</div>

@if(!string.IsNullOrEmpty( Message.ActionLog))
{<div class="row">
    
        <div class="col-md-12">
            <ActionLog Title="Action Log" PlanAsString="@Message.ActionLog"></ActionLog>

        </div>

    </div>
}
