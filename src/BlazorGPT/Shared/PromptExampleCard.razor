<div class="col">
    <div class="card @Class" style="@Style" @onclick="Clicked">
        <div class="card-title">
            <RadzenIcon Icon="@Icon" class="card-icon" IconColor="@IconColor" />
            @Title
        </div>
        <div class="card-body" style="@(!string.IsNullOrEmpty(TextColor) ? $"color:{TextColor};": "")">
            @Body 
        </div>
    </div>
</div>
@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public string? Icon { get; set; }

    [Parameter]
    public string? IconColor { get; set; }

    [Parameter]
    public string? TextColor { get; set; }

    [Parameter]
    public string? Style { get; set; }
    [Parameter]
    public string? Class { get; set; }
    [Parameter]
    public string? Title { get; set; }
    [Parameter]
    public string? Body { get; set; }
    [Parameter]
    public string? Prompt { get; set; }

    [Parameter]
    public EventCallback<string> OnClick { get; set; }

    private async Task Clicked()
    {
        if (OnClick.HasDelegate)
        {
            await OnClick.InvokeAsync(Body);
        }
    }
}
