@page "/conversation/{ConversationId:guid?}"
@page "/conversation/{ConversationId:guid?}/{MessageId:guid?}"
@attribute [Authorize]

@code {

    private async Task CopyConversation(ConversationMessage msg)
    {
        var result = await DialogService.OpenAsync("Copy conversation from here?", ds =>
            @<div>
                <div class="row">
                    <div class="col">
                        @{
                            var newName = "";
                        }
                        <RadzenLabel Text="Enter a name for the copied conversation"></RadzenLabel><br />
                        <RadzenTextBox class="mt-2 mb-2 textarea-full-width" @bind-Value="newName">as</RadzenTextBox><br />
                        <RadzenButton Text="Ok" Click="async () => {await Copy(msg, newName); ds.Close(newName);}" class="me-1" Style="width: 80px;" />
                        <RadzenButton Text="Cancel" Click="() => ds.Close()" ButtonStyle="ButtonStyle.Light" class="me-1" />

                    </div>
                </div>
            </div>
    );
    }
}
@if (Conversation.HasStarted())
{
    <PageTitle>@Conversation?.Summary</PageTitle>
}
else
{
    <PageTitle>New Conversation</PageTitle>

}

<SectionContent SectionName="heading">
    @if (!BotMode)
    {
        
                <RadzenButton Disabled="!Conversation.HasStarted()" Icon="share" Click="ShareClicked" ButtonStyle="ButtonStyle.Info" Size="ButtonSize.Small" Class="ms-1 me-3"/>

                <span class="truncate">@Conversation.Summary</span>
 

   
    }




</SectionContent>

<CascadingValue Name="Conversation" Value="Conversation">
<CascadingValue Name="BotMode" Value="BotMode">
    <CascadingValue Name="ShowActionLog" Value="ShowActionLog">



        <!-- conv page start -->
        <div id="conversationframe" class="container-fluid @Class conversationframe m-0" style="@Style">
            <div class="row">
                <div class="col">
                    <ConversationDisplay BotMode="BotMode"
                                         InitialSystemPrompt="@(Conversation.HasStarted() ? Conversation.Messages.FirstOrDefault(o => o.Role == "system")?.Content : null)"
                                         Conversation="Conversation"
                                         ShowBranches="true"
                                         RestartConversation="RestartConversation"
                                         CopyConversation="CopyConversation"
                                         Style="@ConversationDisplayStyle()">
                        <Head>
                            @ChildContent
                        </Head>
                    </ConversationDisplay>

                        <div class="row sticky-bottom mt-auto">
                            <div id="control" class="col m-3 mb-0 p-1 pb-2 mb-0 mt-2 pt-0">
                                @if (BotMode)
                                {
                                    <div id="bot-control">
                                        <EditForm Model="@Model" OnValidSubmit="@SendConversation">
                                            <div id="message-box" @onkeydown="async obj => await OnPromptKeyUp(obj)"
                                                 @onkeydown:preventDefault="@preventDefaultKey">


                                                <div class="row">
                                                    <div class="col col-8 col-md-8 col-lg-8">
                                                        <RadzenTextArea @ref="_promptField2"
                                                                        @bind-value="@Model.Prompt"
                                                                        class="form-control"
                                                                        Rows="2"
                                                                        Disabled="IsBusy"
                                                                        @oninput="@OnPromptInput"
                                                                        @onkeyup="OnPromptKeyUp" />
                                                    </div>
                                                    <div class="col col-2 col-md-2 col-lg-2">

                                                        <RadzenButton Class="m-0" Size="ButtonSize.Large" Text="" ButtonType="ButtonType.Submit" Visible="!IsBusy" IsBusy="IsBusy" BusyText="Work" Icon="send" Disabled="@SendButtonDisabled" />
                                                        <RadzenButton Class="mt-1" Size="ButtonSize.Large" Text="" ButtonType="ButtonType.Submit" Visible="IsBusy" Icon="cancel" Disabled="@(!IsBusy)" Click="CancelSend" />

                                                    </div>

                                                    <div class="col-2">

                                                        @ButtonContent
                                                    </div>
                                                </div>
                                            </div>

                                            @if (UseFileUpload)
                                            {
                                                <div class="mt-4">

                                                    <FileArea AllowUpload="@(!Conversation.Messages.Any(m => m.Role == "assistant"))"
                                                              OnSyncFiles="FileAreaSynced"
                                                              FolderName="@Conversation.Id?.ToString()" />
                                                </div>

                                            }
                                        </EditForm>
                                    </div>

                                }
                                else
                                {
                                    <RadzenTabs class="" @bind-SelectedIndex=@selectedTabIndex>
                                        <Tabs>
                                            <RadzenTabsItem Text="Conversation" class="m-0 p-0">

                                                <EditForm Model="@Model" OnValidSubmit="@SendConversation">
                                                    <QuickProfileSelector @ref="_profileSelectorStart" InsertAt="InsertAt.Before" ShowLegend="true" ConversationsHasStarted="@(Conversation.Messages.Count() > 1)" OnProfileClicked="StartProfileClicked" />


                                                    <div id="message-box">

                                                        <div class="row">
                                                            <div class="col col-10 col-md-10 col-lg-10">
                                                                <RadzenTextArea @ref="_promptField2"
                                                                                @bind-value="@Model.Prompt"
                                                                                class="form-control"
                                                                                Rows="2"
                                                                                Disabled="IsBusy"
                                                                                @oninput="@OnPromptInput"
                                                                                @onkeyup="OnPromptKeyUp" />
                                                            </div>
                                                            <div class="col col-2 col-md-2 col-lg-2">
                                                                <RadzenButton Class="m-0" Size="ButtonSize.Large" Text="" ButtonType="ButtonType.Submit" Visible="!IsBusy" IsBusy="IsBusy" BusyText="Work" Icon="send" Disabled="@SendButtonDisabled" />
                                                                <RadzenButton Class="mt-1" Size="ButtonSize.Large" Text="" ButtonType="ButtonType.Submit" Visible="IsBusy" Icon="cancel" Disabled="@(!IsBusy)" Click="CancelSend" />
                                                            </div>
                                                        </div>


                                                    </div>

                                                    <QuickProfileSelector @ref="_profileSelectorEnd" InsertAt="InsertAt.After" ShowLegend="false" ConversationsHasStarted="@(Conversation.Messages.Count() > 1)" OnProfileClicked="ApplyEndProfile" />

                                                    <div class="mt-1">
                                                        <SettingsButtonPanel />
                                                    </div>

                                                    <span class="float-end mt-2 mb-0">
                                                        <RadzenButton Visible="Conversation.TreeStateList.Any()" Class="float-end" Click="StateClicked" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.ExtraSmall" Icon="inventory" MouseEnter="@(args => ShowTooltip(args, "Show state", new TooltipOptions()))" Text="Conversation state" />
                                                        <RadzenButton Visible="Conversation.BranchedFromMessageId != null || Conversation.HiveState != null" Class="float-end" Click="HiveStateClicked" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.ExtraSmall" Icon="inventory" MouseEnter="@(args => ShowTooltip(args, "Show hive state", new TooltipOptions()))" Text="Hive state" />
                                                    </span>

                                                    @if (UseFileUpload)
                                                    {
                                                        <FileArea AllowUpload="@(!Conversation.Messages.Any(m => m.Role == "assistant"))"
                                                                  OnSyncFiles="FileAreaSynced"
                                                                  FolderName="@Conversation.Id?.ToString()" />
                                                    }

                                                </EditForm>
                                            </RadzenTabsItem>
                                            <RadzenTabsItem Text="Scripts">
                                                @if (ScriptsDdn?.Scripts.Count() == -1)
                                                {
                                                    <div>
                                                        <RadzenText>
                                                            You do not have any scripts.
                                                            <RadzenLink Path="/scripts"> Create one here</RadzenLink>.
                                                        </RadzenText>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div>
                                                        <div>
                                                            <RadzenTextArea @bind-Value="scriptInput" Rows="2" class="form-control" Disabled="IsBusy" />
                                                        </div>
                                                    </div>

                                                    <ScriptsDropdown @ref="ScriptsDdn" OnClickCallbackGuid="RunScript" SetInitial="false" SetIsWorking="@IsBusy" />
                                                    <RadzenText TextStyle="TextStyle.Overline" class="float-end p-3">Tip: If your scripts first step includes a {0} your prompt will be inserted there</RadzenText>
                                                }
                                            </RadzenTabsItem>
                                        </Tabs>
                                    </RadzenTabs>
                                }

                            </div>
                        </div>
                </div>
                @if (!BotMode)
                {
                    <div class="col-sm-4 d-none d-lg-block" style="overflow-x: hidden; overflow-y: auto;">
                        <Conversations @ref="_conversations"></Conversations>
                    </div>
                }

            </div>


        </div>
    </CascadingValue>
</CascadingValue>
</CascadingValue>